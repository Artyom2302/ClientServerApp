# -*- coding: utf-8 -*-
import threading
import time

# Form implementation generated from reading ui file 'pyClient.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

import msg


class Ui_mainWindow(object):

    def Request(Self, type):
        return msg.Message.Request(msg.MR_BROKER, Self.id, type, "")

    def Send(Self, To, From, Type=msg.MT_DATA, Data=""):
        return msg.Message.SendMessage(To, From, Type, Data)

    def setupUi(self, mainWindow):
        self.id = 0
        self.exit = False
        mainWindow.setObjectName("mainWindow")
        mainWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        mainWindow.setCursor(QtGui.QCursor(QtCore.Qt.UpArrowCursor))
        mainWindow.setFixedSize(536, 228)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.sendBtn = QtWidgets.QPushButton(self.centralwidget)
        self.sendBtn.setGeometry(QtCore.QRect(350, 150, 71, 31))
        self.sendBtn.setObjectName("sendBtn")

        self.UsersList = QtWidgets.QComboBox(self.centralwidget)
        self.UsersList.setGeometry(QtCore.QRect(350, 50, 151, 21))
        self.UsersList.setObjectName("UsersList")
        self.chatBox = QtWidgets.QTextEdit(self.centralwidget)
        self.chatBox.setEnabled(False)
        self.chatBox.setGeometry(QtCore.QRect(50, 50, 201, 131))
        self.chatBox.setObjectName("chatBox")
        self.messageBox = QtWidgets.QTextEdit(self.centralwidget)
        self.messageBox.setEnabled(True)
        self.messageBox.setGeometry(QtCore.QRect(350, 80, 151, 61))
        self.messageBox.setObjectName("messageBox")
        self.chatLabel = QtWidgets.QLabel(self.centralwidget)
        self.chatLabel.setGeometry(QtCore.QRect(130, 30, 31, 16))
        self.chatLabel.setObjectName("chatLabel")
        self.chatLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.chatLabel_2.setGeometry(QtCore.QRect(270, 50, 71, 16))
        self.chatLabel_2.setObjectName("chatLabel_2")
        self.chatLabel_3 = QtWidgets.QLabel(self.centralwidget)
        self.chatLabel_3.setGeometry(QtCore.QRect(270, 100, 51, 16))
        self.chatLabel_3.setObjectName("chatLabel_3")
        mainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 536, 21))
        self.menubar.setObjectName("menubar")
        mainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)
        self.initialize()
        self.sendBtn.clicked.connect(self.SendMessage)
        t = threading.Thread(target=self.ProcessMessages)
        t.start()

    def ShowInfo(self, text):
        mesg = QMessageBox()
        mesg.setText(text)
        mesg.setIcon(QMessageBox.Warning)
        mesg.exec_()
    def close(self):
        self.exit = True
    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "PySocketClient"))
        self.sendBtn.setText(_translate("mainWindow", "Send"))
        self.chatLabel.setText(_translate("mainWindow", "Chat"))
        self.chatLabel_2.setText(_translate("mainWindow", "Client Address"))
        self.chatLabel_3.setText(_translate("mainWindow", "Message"))

    def initialize(self):
        m = self.Request(msg.MT_INIT)
        self.id = m.Header.To
        self.GetUserList()

    def GetUserList(self):
        self.UsersList.clear()
        m = self.Request(msg.MT_GET_USERS)
        ids = m.Data.split(' ')
        self.UsersList.addItem("All users")
        for item in ids:
            if item != "":
                self.UsersList.addItem(item)

    def ProcessMessages(self):
        while not self.exit:
            m = self.Request(msg.MT_GETDATA)
            if m.Header.Type == msg.MT_DATA:
                self.chatBox.append(str(m.Header.From)+": " + m.Data + "\n")
            elif m.Header.Type == msg.MT_NOT_FOUND:
                self.ShowInfo("Client do not exist, try to update list of users")
            elif m.Header.Type == msg.MT_ADD_USER:
                self.UsersList.addItem(m.Data)
            elif m.Header.Type == msg.MT_DELETE_USER:
                print(m.Data)
                index = self.UsersList.findText(m.Data)
                print(index)
                self.UsersList.removeItem(index)
            else:
                time.sleep(1)

    # def DeleteUser(self,id):
    #     for i in range(0,self.UsersList.count()):
    #         if id == self.UsersList.
    def SendMessage(self):
        if self.messageBox.toPlainText() != "":
            if self.UsersList.currentText() == "All users":
                self.Send(msg.MR_ALL, self.id, msg.MT_DATA, self.messageBox.toPlainText())
            else:
                self.Send(int(self.UsersList.currentText()), self.id, msg.MT_DATA, self.messageBox.toPlainText())
        else:
            self.ShowInfo("Enter message")




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_mainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())
